{"version":3,"sources":["webpack:///./src/views/Command.vue?dcf3","webpack:///./src/views/Command.vue","webpack:///./src/assets/md/Command.md","webpack:///./src/views/Command.vue?f4eb"],"names":["displayLoading","class","displayContent","htmlContent","showLoading","showContent","name","components","Loading","setup","value","mdConfig","html","linkify","typographer","highlight","str","lang","language","render","then","useHashChange"],"mappings":"kIAAA,W,yICCA,4BAKU,EAAAA,gB,iBALV,eAMI,GANJ,MACKC,MAAK,C,iBAA6B,c,gBAAqC,gB,mBAD5E,sBAaU,EAAAC,gB,iBANR,eASM,OAhBR,MAQKD,MAAK,C,uCAA8D,c,gBAAqC,gB,CAOzG,eAAsD,OAAjDA,MAAM,gBAAgB,UAAQ,EAAAE,a,2BAfvC,uB,8GCDe,qnHD6BXC,EAAc,gBAAI,GAClBC,EAAc,gBAAI,GAClBL,EAAiB,gBAAI,GACrBE,EAAiB,gBAAI,GACnBC,EAAc,eAAI,IAET,GACbG,KAAM,UACNC,WAAY,CAAEC,UAAA,MACdC,MAHa,WA2CX,OAvCA,eAAS,wCAAC,wGACJL,EAAYM,MADR,uBAEAC,EAAW,IAAG,CAClBC,MAAM,EACNC,SAAS,EACTC,aAAa,EAEbC,UALkB,SAKRC,EAAKC,GACb,OAAO,IAAKF,UAAUC,EAAK,CAAEE,SAAUD,IAAQP,SAGnDP,EAAYO,MAAQC,EAASQ,OAAT,UAAmB,IAXjC,SAaA,gBAAe,WAEnBf,EAAYM,OAAQ,IACnB,KACAU,MAAK,WACJ,OAAO,gBAAe,WAEpBpB,EAAeU,OAAQ,EACvBR,EAAeQ,OAAQ,IACtB,QAEJU,MAAK,WACJ,OAAO,gBAAe,WAEpBf,EAAYK,OAAQ,EAEpB,mBACC,QA9BD,6BAkCN,iBAlCM,4CAsCV,OAAAW,EAAA,QACO,CACLjB,cACAC,cACAL,iBACAE,iBACAC,iB,UE9EN,EAAOgB,OAASA,EAED","file":"js/command.b04821bc.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Command.vue?vue&type=style&index=0&id=c12d783c&lang=scss\"","<template>\r\n  <Loading\r\n    :class=\"{\r\n      'content--hide': !showLoading,\r\n      'content--show': showLoading,\r\n    }\"\r\n    v-if=\"displayLoading\"\r\n  />\r\n  <div\r\n    :class=\"{\r\n      'markdown-content': true,\r\n      'content--hide': !showContent,\r\n      'content--show': showContent,\r\n    }\"\r\n    v-if=\"displayContent\"\r\n  >\r\n    <div class=\"markdown-body\" v-html=\"htmlContent\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { scrollToTargetId, timeoutPromise } from \"../utils\";\r\nimport useHashChange from \"../hooks/useHashChange\";\r\nimport md from \"markdown-it\";\r\nimport hljs from \"highlight.js\";\r\nimport Loading from \"../components/Loading\";\r\nimport data from \"!raw-loader!../assets/md/Command.md\";\r\n\r\nlet showLoading = ref(true);\r\nlet showContent = ref(false);\r\nlet displayLoading = ref(true);\r\nlet displayContent = ref(false);\r\nconst htmlContent = ref(\"\");\r\n\r\nexport default {\r\n  name: \"Command\",\r\n  components: { Loading },\r\n  setup() {\r\n    onMounted(async () => {\r\n      if (showLoading.value) {\r\n        const mdConfig = md({\r\n          html: true,\r\n          linkify: true,\r\n          typographer: true,\r\n          // 針對特定語言顯示文字突出效果\r\n          highlight(str, lang) {\r\n            return hljs.highlight(str, { language: lang }).value;\r\n          },\r\n        });\r\n        htmlContent.value = mdConfig.render(`${data}`);\r\n\r\n        await timeoutPromise(() => {\r\n          // 等待 v-if 效果\r\n          showLoading.value = false;\r\n        }, 1000)\r\n          .then(() => {\r\n            return timeoutPromise(() => {\r\n              // 等待loading動畫結束\r\n              displayLoading.value = false;\r\n              displayContent.value = true;\r\n            }, 500);\r\n          })\r\n          .then(() => {\r\n            return timeoutPromise(() => {\r\n              // 等待 v-if 效果\r\n              showContent.value = true;\r\n              // 若網址帶有 hashtag 直接進入頁面\r\n              scrollToTargetId();\r\n            }, 100);\r\n          });\r\n      } else {\r\n        // 若使用者前往其他筆記往並使用瀏覽器往前往後切換頁面帶有 hashtag\r\n        scrollToTargetId();\r\n      }\r\n    });\r\n    // 若在同個筆記切換 hash (#???)，則使用onhashchange監聽\r\n    useHashChange();\r\n    return {\r\n      showLoading,\r\n      showContent,\r\n      displayLoading,\r\n      displayContent,\r\n      htmlContent,\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n@import \"../style/md.scss\";\r\n.content--hide {\r\n  opacity: 0;\r\n}\r\n\r\n.content--show {\r\n  opacity: 1;\r\n}\r\n</style>\r\n","export default \"## 常用指令 筆記\\r\\n<a id=\\\"user-content-top\\\"></a>\\r\\n\\r\\n### 目錄\\r\\n<details open>\\r\\n<summary style=\\\"cursor: pointer;\\\">&nbsp;指令筆記 </summary>\\r\\n\\r\\n- [npm/pnpm 常用指令](#user-content-npm-pnpm)\\r\\n- [Linux 常用指令](#user-content-linux)\\r\\n- [VMware Workstation 常用指令](#user-content-vmware-workstation)\\r\\n- [VSCode 疑難雜症](#user-content-vscode)\\r\\n\\r\\n</details>\\r\\n\\r\\n<hr id=\\\"user-content-npm-pnpm\\\" style=\\\"height: 4px;\\\">\\r\\n\\r\\n#### <a href=\\\"#user-content-top\\\">npm/pnpm 常用指令</a>\\r\\n- 左右邊指令等價\\r\\n  | `npm` | `pnpm` | 解釋 |\\r\\n  | :-- | :-- | :-- |\\r\\n  | `npm [install or i]` | `pnpm [install or i]` | 安裝工作目錄下的依賴包 |\\r\\n  | `npm i <pkg>` | `pnpm add <pkg>` | 安裝至 `dependencies` |\\r\\n  | `npm i <pkg> -D` | `pnpm add <pkg> -D` | 安裝至 `devDependencies` |\\r\\n  | `npm i <pkg> -O` | `pnpm add <pkg> -O` | 安裝至 `optionalDependencies` |\\r\\n  | `npm run <cmd>` | `pnpm <cmd>` | 執行命令 |\\r\\n  | `npm i <pkg>@next` | `pnpm add <pkg>@next` | 安裝 `next tag` |\\r\\n  | `npm i <pkg>@<version>` | `pnpm add <pkg>@<version>` | 安裝 `指定版本` |\\r\\n\\r\\n<hr id=\\\"user-content-linux\\\" style=\\\"height: 2px;\\\">\\r\\n\\r\\n#### <a href=\\\"#user-content-top\\\">Linux 常用指令</a>\\r\\n- 查詢目前絕對路徑：pwd\\r\\n- 查詢目前資料夾所有子檔案目錄：ls\\r\\n  - 顯示所有資訊：ls -l \\r\\n- 資料夾與檔案權限解釋\\r\\n  - 若有個檔案，名稱為 doc，則查看該檔案權限指令：ll doc\\r\\n  - 若輸入後取得資訊為：```-rw-r--r-- 1 root root_group 898 二 24 13:23 doc```，則詳細解釋如下：\\r\\n    ```txt\\r\\n    把取得的資訊分為6個部份：\\r\\n    -    rw-  r--  r--   1   root root_group 898  二   24   13:23  doc\\r\\n    (1)  (2)  (3)  (4)  (5)  (6)     (7)     (8)  (9) (10)  (11)   (12)\\r\\n    \\r\\n    (1)~(12) 說明如下\\r\\n    (1) 代表是檔案或資料夾，-代表是檔案，d代表是資料夾\\r\\n    (2) 代表擁有者的檔案權限，完整權限是rwx，代表可讀、可寫、可執行。若無該權限則以-代替，所以rw-，代表可讀、可寫，但不可執行\\r\\n    (3) 代表所屬群組的檔案權限，完整權限是rwx，代表read, write, 執行。若無該權限則以-代替，所以r--，代表只有讀取權限，不可寫也不可執行\\r\\n    (4) 代表非擁有者且帳號不在群組內的人，的檔案權限\\r\\n    (5) 代表裡面包含幾個檔案\\r\\n    (6) 擁有者帳號\\r\\n    (7) 所屬群組\\r\\n    (8) 代表該檔案或資料夾大小(Bytes)\\r\\n    (9) 月份\\r\\n    (10) 日期\\r\\n    (11) 時間\\r\\n    (12) 檔案或資料夾名稱\\r\\n    ```\\r\\n- 設定權限指令 ```chmod``` 的 ```rwx``` 解釋： \\r\\n  - ```-R```：代表遞迴將資料夾底下的子目錄檔案皆設定一樣權限\\r\\n  - ```r```：代表 ```read(讀取)```，對應數字 ```4```\\r\\n  - ```w```：代表 ```write(寫入)```，對應數字 ```2```\\r\\n  - ```x```：代表 ```execute(執行)```，對應數字 ```1```\\r\\n  - 指令解釋範例\\r\\n    ```txt\\r\\n    若指令為 sudo chmod -R 777 /home/root/dir 則代表：\\r\\n    將 /home/root/dir 資料夾(-R:含底下所有子目錄檔案)設定\\r\\n    擁有者、所屬群組、非擁有者且帳號不在群組內的人 4+2+1(7:可讀可寫可執行)權限\\r\\n    ```\\r\\n - 設定檔案資料夾擁有者 ```chown```\\r\\n   - 指令解釋範例\\r\\n     ```txt\\r\\n     * myfile 也可以是資料夾 *\\r\\n     # 將 myfile 的擁有者改為 myuser\\r\\n     sudo chown myuser myfile\\r\\n     # 將 myfile 的群組改為 mygroup\\r\\n     sudo chown :mygroup myfile\\r\\n     # 同時更改擁有者與群組\\r\\n     sudo chown myuser:mygroup myfile\\r\\n     # 輸出執行結果\\r\\n     sudo chown -v myuser:mygroup myfile\\r\\n     # 不輸出任何錯誤訊息\\r\\n     sudo chown -f myuser:mygroup myfile\\r\\n     # 遞迴更改整個目錄下的所有檔案\\r\\n     sudo chown -R myuser:mygroup myfolder\\r\\n     # 確認舊的擁有者與群組為 root:syslog，檢查無誤才變更\\r\\n     sudo chown --from=root:syslog myuser:mygroup myfile\\r\\n     # 只確認舊的擁有者為 root\\r\\n     sudo chown --from=root myuser:mygroup myfile\\r\\n     # 只確認舊的群組為 syslog\\r\\n     sudo chown --from=:syslog myuser:mygroup myfile\\r\\n     ```\\r\\n \\r\\n<hr id=\\\"user-content-vmware-workstation\\\" style=\\\"height: 2px;\\\">\\r\\n\\r\\n#### <a href=\\\"#user-content-top\\\">VMware Workstation 常用指令</a>\\r\\n- 自動開啟虛擬機：\\r\\n  ```txt\\r\\n  \\\"C:\\\\Program Files (x86)\\\\VMware\\\\VMware Workstation\\\\vmware.exe\\\" -x \\\"你的虛擬機位置\\\\虛擬機名稱.vmx\\\"\\r\\n  ```\\r\\n\\r\\n<hr id=\\\"user-content-vscode\\\" style=\\\"height: 2px;\\\">\\r\\n\\r\\n#### <a href=\\\"#user-content-top\\\">VSCode 疑難雜症</a>\\r\\n- 若 `Live Server` 要執行 `SPA` 專案，則可在 `VSCode` 設定內加入\\r\\n  - [Live Server 設定檔](https://github.com/ritwickdey/vscode-live-server/blob/HEAD/docs/settings.md)\\r\\n  ```json\\r\\n  {\\r\\n    \\\"liveServer.settings.file\\\": \\\"index.html\\\"\\r\\n  }\\r\\n  ```\\r\\n\";","import { render } from \"./Command.vue?vue&type=template&id=c12d783c\"\nimport script from \"./Command.vue?vue&type=script&lang=js\"\nexport * from \"./Command.vue?vue&type=script&lang=js\"\n\nimport \"./Command.vue?vue&type=style&index=0&id=c12d783c&lang=scss\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}